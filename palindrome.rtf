{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red50\green244\blue241;\red0\green0\blue0;\red99\green226\blue255;
\red254\green215\blue216;\red224\green228\blue9;\red251\green30\blue255;\red235\green239\blue24;\red223\green223\blue223;
\red220\green0\blue5;\red29\green226\blue223;\red19\green150\blue163;}
{\*\expandedcolortbl;;\cssrgb\c19571\c95778\c95688;\csgray\c0;\cssrgb\c44518\c90662\c100000;
\cssrgb\c100000\c87709\c87701;\cssrgb\c90000\c90000\c0;\cssrgb\c100000\c29678\c100000;\cssrgb\c93803\c93590\c10850;\cspthree\c90006\c89994\c90010;
\cssrgb\c90000\c0\c0;\cssrgb\c0\c90000\c90000;\cssrgb\c0\c65000\c70000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 #include<stdio.h>\cf3 \
\cf2 #include<string.h>\cf3 \
\cf2 #define MAX_LENGTH 100 //assuming this is the maximum lenght of the sequence.increase this if need be\cf3 \
\
int is_palindrome\cf4 (\cf5 char *sequence\cf3 \cb6 ,\cf5 \cb1  int seq_length\cf4 )\cf5 \{\cf3 \
int 
\f1\b \cf2 ispalin
\f0\b0 \cf3 =\cf7 1\cf8 ;\cf3  //Assuming the sequence is palindrome\
char rev_sequence\cf8 [\cf3 MAX_LENGTH\cf8 ];\cf3  //variable to keep reverse of the sequence\
int 
\f1\b \cf2 j
\f0\b0 \cf3 =\cf7 0\cf8 ;\cf3  //variable to keep current index of reverse sequence\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 for\cf3  \cf4 (\cf3 int i = seq_length\cf7 -1\cf3 ; i >= \cf7 0\cf3 ; i--\cf4 )\cf3 \
\cf5 \{\cf3 \
rev_sequence\cf8 [\cf3 j\cf8 ]=\cf3 sequence\cf8 [\cf3 i\cf8 ];\cf3 \
j++\cf8 ;\cf3 \
\cf5 \}\cf3 \
rev_sequence\cf8 [\cf3 j\cf8 ]=\cf7 '\\0'\cf3 ; //ending the sequence with null character to make it a string\
\cf8 for\cf3  \cf4 (\cf3 int i = \cf7 0\cf3 ; i < seq_length; i++\cf4 )\cf3 \
\cf5 \{\cf3 \
\cf8 if \cf4 (\cf3 sequence[i]!=rev_sequence[i]\cf4 )\cf3 // \cf8 if \cf3 any character mismatches sequence is not palindrome as reverse does not match the 
\f1\b \cf2 sequence
\f0\b0 \cf3 \

\f1\b \cf2 \{
\f0\b0 \cf3 \

\f1\b \cf2 ispalin
\f0\b0 \cf3 =\cf7 0\cf8 ;\
break;\cf3 \

\f1\b \cf2 \}
\f0\b0 \cf3 \
\cf9 \cb10 \}\cf3 \cb1 \
\
\
\cf8 return\cf3  ispalin;\
\cf9 \cb10 \}\cf3 \cb1 \
int 
\f1\b \cf2 main()
\f0\b0 \cf3 \

\f1\b \cf11 \cb12 \{
\f0\b0 \cf3 \cb1 \
char sequence\cf8 [\cf3 MAX_LENGTH\cf8 ];\cf3 \
\cf8 printf\cf4 (\cf8 "\cf7 Enter the sequence: \cf8 "\cf4 )\cf8 ;\cf3 \
scanf\cf4 (\cf8 "\cf7 %s\cf8 "\cf3 \cb6 ,\cb1 sequence\cf4 )\cf8 ;\cf3  // taking input from user from stdio\
\cf8 if \cf4 (\cf3 is_palindrome\cf4 (\cf3 sequence\cb6 ,\cb1 strlen\cf4 (\cf3 sequence\cf4 )))\cf3  //is_palindrome takes \cf7 2\cf3  arguements one is sequence and other is length of the 
\f1\b \cf2 sequence
\f0\b0 \cf3 \

\f1\b \cf2 \{
\f0\b0 \cf3 \
\cf8 printf\cf4 (\cf8 "\cf7 %s is a palindrome\cf5 \\n\cf8 "\cf3 \cb6 ,\cb1 sequence\cf4 )\cf8 ;\cf3 \

\f1\b \cf2 \}
\f0\b0 \cf3 \
\cf8 else\cf3 \
\cf5 \{\cf3 \
\cf8 printf\cf4 (\cf8 "\cf7 %s is not palindrome\cf5 \\n\cf8 "\cf3 \cb6 ,\cb1 sequence\cf4 )\cf8 ;\cf3 \
\cf5 \}\cf3 \
\cf8 return\cf3  \cf7 0\cf3 ;\
\cf9 \cb12 \}}