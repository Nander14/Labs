{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
#include <stdio.h>\
#include <stdlib.h>\
#include <string.h>\
\
// Defining comparator function as per the requirement\
static int myCompare(const void* a, const void* b)\
\{\
\
        // setting up rules for comparison\
        return strcmp(*(const char**)a, *(const char**)b);\
\}\
\
// Function to sort the array\
void sort(const char* arr[], int n)\
\{\
        // calling qsort function to sort the array\
        // with the help of Comparator\
        qsort(arr, n, sizeof(const char*), myCompare);\
\}\
\
int main()\
\{\
\
        // Get the array of names to be sorted\
        const char* arr[]= \{ "Programming", "Deep", "Learning", "Internet", "Things", "Robotics", "Course" \};\
\
        int n = sizeof(arr) / sizeof(arr[0]);\
        int i;\
\
        // Print the given names\
        printf("Given array is\\n");\
        for (i = 0; i < n; i++)\
                printf("%d: %s \\n", i, arr[i]);\
\
        // Sort the given names\
        sort(arr, n);\
\
        // Print the sorted names\
        printf("\\nSorted array is\\n");\
        for (i = 0; i < n; i++)\
                printf("%d: %s \\n", i, arr[i]);\
\
        return 0;\
\}}